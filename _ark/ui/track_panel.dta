#define TRACK_END_FRAME
(1920)
#define TRACK_PANEL_HANDLERS
((enter
      {game add_sink $this}
      {$this
         set_showing
         {!
            {gamemode in_mode practice}}})
   (exit
      {game remove_sink $this})
   (unison_hit)
   (set_track_out)
   (set_track_in)
   (animate_track
      ($start $end $period $units))
   (animate_track_out)
   (animate_track_out_fast)
   (animate_track_in_fast)
   (finish_load
      {$this set_showing FALSE}
      {$this set_track_out})
   (intro_start
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_in})
   (intro_skip
      {$this track_reset}
      {$this set_showing TRUE}
      {$this set_track_out})
   (on_reset
      {beatmatch
         foreach_active_player
         $m
         {$m on_new_track}})
   (on_extend

{if $animatedtextures
;populate memory with textures for replacement
{set $framecounttex 0}
{thread_task kTaskSeconds (script
{new Tex {sprint "frame" $framecounttex ".tex"}}
{set $framecounttex {+ $framecounttex 1}}
{unless {>= $framecounttex 60} {$task loop}})}}

{if $animatedtextures
;populate memory with textures for replacement
{set $fframecounttex 0}
{thread_task kTaskSeconds (script
{new Tex {sprint "fframe" $fframecounttex ".tex"}}
{set $fframecounttex {+ $fframecounttex 1}}
{unless {>= $fframecounttex 60} {$task loop}})}}

{if $animatedtextures
;populate memory with textures for replacement
{set $ffframecounttex 0}
{thread_task kTaskSeconds (script
{new Tex {sprint "ffframe" $ffframecounttex ".tex"}}
{set $ffframecounttex {+ $ffframecounttex 1}}
{unless {>= $ffframecounttex 60} {$task loop}})}}

;populate texture array if an animated texture modifier is on
{if $animatedtextures
{set $framearray (frame0.tex frame1.tex frame2.tex frame3.tex frame4.tex frame5.tex frame6.tex
frame7.tex frame8.tex frame9.tex frame10.tex frame11.tex frame12.tex frame13.tex frame14.tex
frame15.tex frame16.tex frame17.tex frame18.tex frame19.tex frame20.tex frame21.tex frame22.tex
frame23.tex frame24.tex frame25.tex frame26.tex frame27.tex frame28.tex frame29.tex frame30.tex
frame31.tex frame32.tex frame33.tex frame34.tex frame35.tex frame36.tex frame37.tex frame38.tex
frame39.tex frame40.tex frame41.tex frame42.tex frame43.tex frame44.tex frame45.tex frame46.tex
frame47.tex frame48.tex frame49.tex frame50.tex frame51.tex frame52.tex frame53.tex frame54.tex
frame55.tex frame56.tex frame57.tex frame58.tex frame59.tex frame60.tex)}}

;populate texture array if an animated texture modifier is on
{if $rb4ui
{set $fframearray (fframe0.tex fframe1.tex fframe2.tex fframe3.tex fframe4.tex fframe5.tex fframe6.tex
fframe7.tex fframe8.tex fframe9.tex fframe10.tex fframe11.tex fframe12.tex fframe13.tex fframe14.tex
fframe15.tex fframe16.tex fframe17.tex fframe18.tex fframe19.tex fframe20.tex fframe21.tex fframe22.tex
fframe23.tex fframe24.tex fframe25.tex fframe26.tex fframe27.tex fframe28.tex fframe29.tex fframe30.tex
fframe31.tex fframe32.tex fframe33.tex fframe34.tex fframe35.tex fframe36.tex fframe37.tex fframe38.tex
fframe39.tex fframe40.tex fframe41.tex fframe42.tex fframe43.tex fframe44.tex fframe45.tex fframe46.tex
fframe47.tex fframe48.tex fframe49.tex fframe50.tex fframe51.tex fframe52.tex fframe53.tex fframe54.tex
fframe55.tex fframe56.tex fframe57.tex fframe58.tex fframe59.tex fframe60.tex)}}

;populate texture array if an animated texture modifier is on
{if $animatedhighway
{set $ffframearray (ffframe0.tex ffframe1.tex ffframe2.tex ffframe3.tex ffframe4.tex ffframe5.tex ffframe6.tex
ffframe7.tex ffframe8.tex ffframe9.tex ffframe10.tex ffframe11.tex ffframe12.tex ffframe13.tex ffframe14.tex
ffframe15.tex ffframe16.tex ffframe17.tex ffframe18.tex ffframe19.tex ffframe20.tex ffframe21.tex ffframe22.tex
ffframe23.tex ffframe24.tex ffframe25.tex ffframe26.tex ffframe27.tex ffframe28.tex ffframe29.tex ffframe30.tex
ffframe31.tex ffframe32.tex ffframe33.tex ffframe34.tex ffframe35.tex ffframe36.tex ffframe37.tex ffframe38.tex
ffframe39.tex ffframe40.tex ffframe41.tex ffframe42.tex ffframe43.tex ffframe44.tex ffframe45.tex ffframe46.tex
ffframe47.tex ffframe48.tex ffframe49.tex ffframe50.tex ffframe51.tex ffframe52.tex ffframe53.tex ffframe54.tex
ffframe55.tex ffframe56.tex ffframe57.tex ffframe58.tex ffframe59.tex ffframe60.tex)}}

;populate shiny smasher bitmaps
{if $shinysmashers
{set $framecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
{{sprint "frame" $framecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/gem_smashers_shiny/gem_smashers_shiny_" $framecountbit ".png"}}
{set $framecountbit {+ $framecountbit 1}}
{unless {>= $framecountbit 60} {$task loop}})}}

;apply shiny smasher in game task
{if $shinysmashers
{set $framecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
;{gem_smasher_drum.mat set diffuse_tex {elem $framearray $framecountdif}}
{gem_smasher_guitar.mat set diffuse_tex {elem $framearray $framecountdif}}
{set $framecountdif {+ $framecountdif 1}}
{$task sleep 0.016}
{if {>= $framecountdif 60} {set $framecountdif 0}}
{$task loop})}}

;populate starlight smasher bitmaps
{if $starlightsmashers
{set $framecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
{{sprint "frame" $framecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/gem_smashers_starlight/gem_smashers_starlight_" $framecountbit ".png"}}
{set $framecountbit {+ $framecountbit 1}}
{unless {>= $framecountbit 60} {$task loop}})}}

;apply starlight smasher in game task
{if $starlightsmashers
{set $framecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
;{gem_smasher_drum.mat set diffuse_tex {elem $framearray $framecountdif}}
{gem_smasher_guitar.mat set diffuse_tex {elem $framearray $framecountdif}}
{set $framecountdif {+ $framecountdif 1}}
{$task sleep 0.016}
{if {>= $framecountdif 60} {set $framecountdif 0}}
{$task loop})}}

;populate animated gems bitmaps
{if $rb4ui
{set $fframecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
;{{sprint "fframe" $fframecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/gem_cymbal_diffuse/gem_cymbal_diffuse_" $fframecountbit ".png"}}
{{sprint "fframe" $fframecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/prism_gems/prism_gems_" $fframecountbit ".png"}}
;{{sprint "fframe" $fframecountbit ".tex"} set_bitmap {sprint "ui/track/custom_track_textures/prism_gem_keyboard_style/prism_gem_keyboard_style_" $fframecountbit ".png"}}
{set $fframecountbit {+ $fframecountbit 1}}
{unless {>= $fframecountbit 60} {$task loop}})}}

;apply animated gems in game task
{if $rb4ui
{set $fframecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
{gem_cymbal_diffuse.tex iterate_refs $ref {$ref set diffuse_tex {elem $fframearray $fframecountdif}}}
{gem_cymbal_ems.tex iterate_refs $ref {$ref set diffuse_tex {elem $fframearray $fframecountdif}}}
{prism_gems.tex iterate_refs $ref {$ref set diffuse_tex {elem $fframearray $fframecountdif}}}
{prism_gem_emissive.tex iterate_refs $ref {$ref set diffuse_tex {elem $fframearray $fframecountdif}}}
{prism_gem_keyboard_style.tex iterate_refs $ref {$ref set diffuse_tex {elem $fframearray $fframecountdif}}}
{set $fframecountdif {+ $fframecountdif 1}}
{$task sleep 0.016}
{if {>= $fframecountdif 60} {set $fframecountdif 0}}
{$task loop})}}

;populate animated highway bitmaps
{if $animatedhighway
{set $ffframecountbit 0}
{thread_task kTaskSeconds (delay 0.2) (script
{{sprint "ffframe" $ffframecountbit ".tex"} set_bitmap {sprint "ui/track/animated_surfaces/rb4effect9_color1/rb4effect9_color1_" $ffframecountbit ".png"}}
{set $ffframecountbit {+ $ffframecountbit 1}}
{unless {>= $ffframecountbit 60} {$task loop}})}}

;apply animated highway in game task
{if $animatedhighway
{set $ffframecountdif 0}
{thread_task kTaskSeconds (delay 0.4) (script
{watermark_guitar.tex iterate_refs $ref {$ref set diffuse_tex {elem $ffframearray $ffframecountdif}}}
{watermark_bass.tex iterate_refs $ref {$ref set diffuse_tex {elem $ffframearray $ffframecountdif}}}
{watermark_drum.tex iterate_refs $ref {$ref set diffuse_tex {elem $ffframearray $ffframecountdif}}}
{watermark_keys.tex iterate_refs $ref {$ref set diffuse_tex {elem $ffframearray $ffframecountdif}}}
{watermark_guitar.tex iterate_refs $ref {$ref set alpha 255}}
{watermark_bass.tex iterate_refs $ref {$ref set alpha 255}}
{watermark_drum.tex iterate_refs $ref {$ref set alpha 255}}
{watermark_keys.tex iterate_refs $ref {$ref set alpha 255}}
{set $ffframecountdif {+ $ffframecountdif 1}}
{$task sleep 0.016}
{if {>= $ffframecountdif 60} {set $ffframecountdif 0}}
{$task loop})}}

{if $rb4ui
      {gem_cymbal_diffuse.tex set_bitmap {sprint "ui/track/custom_track_textures/gem_cymbal_diffuse/gem_cymbal_diffuse_0.png"}}
      {gem_cymbal_ems.tex set_bitmap {sprint "ui/track/custom_track_textures/gem_cymbal_diffuse/gem_cymbal_diffuse_0.png"}}
      {prism_gems.tex set_bitmap {sprint "ui/track/custom_track_textures/prism_gems/prism_gems_0.png"}}
      {prism_gem_emissive.tex set_bitmap {sprint "ui/track/custom_track_textures/prism_gems/prism_gems_0.png"}}
      {prism_gem_keyboard_style.tex set_bitmap {sprint "ui/track/custom_track_textures/prism_gem_keyboard_style/prism_gem_keyboard_style_0.png"}}
      {score_star_frame.tex set_bitmap ui/track/custom_track_textures/score_star_frame.png}
      {score_star_gold.tex set_bitmap ui/track/custom_track_textures/score_star_gold.png}
      {rb3_icons.tex set_bitmap ui/track/custom_track_textures/rb3_icons.png}
      {scoreboard_frame.tex set_bitmap ui/track/custom_track_textures/scoreboard_frame.png}
      {scoreboard_lens.tex set_bitmap ui/track/custom_track_textures/_no_highway.png}
      {crowd_meter_frame.tex set_bitmap ui/track/custom_track_textures/crowd_meter_frame.png}
      {crowd_meter_lens.tex set_bitmap ui/track/custom_track_textures/_no_highway.png}
      {gem_smashers_guitar_nomip.tex set_bitmap ui/track/custom_track_textures/gem_smashers_guitar_nomip.png}
      {gem_smashers_guitar.tex set_bitmap ui/track/custom_track_textures/gem_smashers_guitar_nomip.png}
      {square_smasher_bright_green.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_green.png}
      {square_smasher_bright_red.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_red.png}
      {square_smasher_bright_yellow.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_yellow.png}
      {square_smasher_bright_blue.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_blue.png}
      {square_smasher_bright_orange.tex set_bitmap ui/track/custom_track_textures/square_smasher_bright_orange.png}}
      {unless $defaultemissive
      {spotlight_bass_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_drums_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_guitar_track_emmissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_keys_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}
      {spotlight_prokeys_track_emissive.tex set_bitmap {sprint "ui/track/emissives/" $emissive ".png"}}}
      {unless $defaultspotlight
      {spotlight_guitar_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_bass_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_drums_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_prokeys_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}
      {spotlight_keys_track.tex set_bitmap {sprint "ui/track/spotlights/" $spotlight ".png"}}}
      {unless $defaulthighway
      {watermark_guitar.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}
      {watermark_bass.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}
      {watermark_drum.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}
      {watermark_keys.tex set_bitmap {sprint "ui/track/surfaces/" $highway ".png"}}}
      
      
{$this play_intro}
      {if
         {&&
            {exists gamemode}
            {gamemode get play_track_intro_sfx}}
         {$this play_seq track_beg.cue}
         #ifdef HX_XBOX
         {unless
            {'||'
               {gamemode in_mode audition}
               {&&
                  {gamemode in_mode practice}
                  {>
                     {gamecfg get practice_speed}
                     0}}}
            {beatmatch set_music_speed $speedmod}}
         #else
         {unless
            {&&
               {gamemode in_mode practice}
               {>
                  {gamecfg get practice_speed}
                  0}}
            {beatmatch set_music_speed $speedmod}}
         #endif
         {if
            {&&
               {gamemode in_mode practice}
               {>
                  {gamecfg get practice_speed}
                  0}}
            {beatmatch set_music_speed $modifier}}}
))
{new
   TrackPanel
   coop_track_panel
   (file
      "track/trackpanel.milo")
   TRACK_PANEL_HANDLERS}
{func
   get_track_panel
   {gamemode get track_panel}}
{set
   $playback_file
   ""}